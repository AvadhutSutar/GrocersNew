{"version":3,"sources":["App.js","index.js"],"names":["App","useState","items","setItems","inputValue","setInputValue","handleAddButtonClick","checkIndex","findIndex","itemName","alert","quantity","newItem","isSelected","newItems","className","value","onChange","event","target","placeholder","onClick","type","itemList","document","getElementById","innerHTML","window","location","reload","id","map","item","index","toggleComplete","handleQuantityDecrease","handleQuantityIncrease","ReactDOM","render"],"mappings":"mKA+HeA,EA5HH,WAEX,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACG,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAUH,IAAMC,EAAuB,WAC1B,IAAMC,EAAaL,EAAMM,WAAU,SAAAN,GAAK,OAAIE,IAAeF,EAAMO,YACnE,GAAmB,KAAfL,EAPFM,MAAO,8BASF,IAAoB,IAAhBH,EACVL,EAAMK,GAAYI,WAClBN,EAAc,IACdK,MAAO,gEAEF,CACN,IAAME,EAAU,CACfH,SAAUL,EACVO,SAAU,EACVE,YAAY,GAGPC,EAAQ,sBAAOZ,GAAP,CAAcU,IAE5BT,EAASW,GACTT,EAAc,MA+Cf,OACC,yBAAKU,UAAU,kBACd,yBAAKA,UAAU,kBACf,4CACC,8BAAM,yBAAKA,UAAU,gBACpB,2BAAOC,MAAOZ,EAAYa,SAAU,SAACC,GAAD,OAAWb,EAAca,EAAMC,OAAOH,QAAQD,UAAU,iBAAiBK,YAAY,mBACzH,8BAAM,4BAAQL,UAAU,MAAMM,QAAS,kBAAMf,MAAvC,SACL,6BAAK,2BAAOgB,KAAK,SAASN,MAAM,QAAQK,QAd5B,SAACE,GAChBC,SAASC,eAAe,YAAYC,UAAY,GAChDC,OAAOC,SAASC,QAAO,SAoBtB,yBAAKC,GAAG,YACN5B,EAAM6B,KAAI,SAACC,EAAMC,GAAP,OACV,yBAAKlB,UAAU,kBACd,yBAAKA,UAAU,YAAYM,QAAS,kBAzCnB,SAACY,GACvB,IAAMnB,EAAQ,YAAOZ,GAErBY,EAASmB,GAAOpB,YAAcC,EAASmB,GAAOpB,WAE9CV,EAASW,GAoCsCoB,CAAeD,KACvDD,EAAKnB,WACL,oCAEC,0BAAME,UAAU,aAAaiB,EAAKvB,WAGnC,oCAEC,8BAAOuB,EAAKvB,YAIf,yBAAKM,UAAU,YACd,4BAAQM,QAAS,kBAhEO,SAACY,GAC/B,IAAMnB,EAAQ,YAAOZ,GAErBY,EAASmB,GAAOtB,WAEhBR,EAASW,GA2DoBqB,CAAuBF,KAA9C,KACA,kCAAQD,EAAKrB,SAAb,KACA,4BAAQU,QAAS,kBA3EO,SAACY,GAC/B,IAAMnB,EAAQ,YAAOZ,GAErBY,EAASmB,GAAOtB,WAEhBR,EAASW,GAsEoBsB,CAAuBH,KAA9C,gBC/GRI,IAASC,OACL,kBAAC,EAAD,MACFd,SAASC,eAAe,U","file":"static/js/main.f59c1256.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './index.css';\n\nconst App = () => {\n\t\n\tconst [items, setItems] = useState([]);\n    const [inputValue, setInputValue] = useState('');\n\n\tfunction checkInputValue(){\n\t\n\t\t\treturn (\n\t\t\t\talert (\"Input cannot be blank\")\n\t\t\t);\n\t\t}\n\t\t\n\n\tconst handleAddButtonClick = () => {\n    const checkIndex = items.findIndex(items => inputValue === items.itemName );\n\t\tif (inputValue === \"\"){\n\t\t\tcheckInputValue();\n\t\t} else if (checkIndex !== -1){\n\t\t\titems[checkIndex].quantity++;\n\t\t\tsetInputValue('');\n\t\t\talert (\"item already present in the cart & quantity is increased\")\n\t\t\t\n\t\t}else {\n\t\tconst newItem = {\n\t\t\titemName: inputValue,\n\t\t\tquantity: 1,\n\t\t\tisSelected: false,\n\t\t};\n\n\t\tconst newItems = [...items, newItem];\n\n\t\tsetItems(newItems);\n\t\tsetInputValue('');\n\t\t// calculateTotal();\n\t}\n\t\t\n\t};\n\n\tconst handleQuantityIncrease = (index) => {\n\t\tconst newItems = [...items];\n\n\t\tnewItems[index].quantity++;\n\n\t\tsetItems(newItems);\n\t\t// calculateTotal();\n\t};\n\n\tconst handleQuantityDecrease = (index) => {\n\t\tconst newItems = [...items];\n\n\t\tnewItems[index].quantity--;\n\n\t\tsetItems(newItems);\n\t\t// calculateTotal();\n\t};\n\n\tconst toggleComplete = (index) => {\n\t\tconst newItems = [...items];\n\n\t\tnewItems[index].isSelected = !newItems[index].isSelected;\n\n\t\tsetItems(newItems);\n\t};\n\n\t// const calculateTotal = () => {\n\t\t// const totalItemCount = items.reduce((total, item) => {\n\t\t\t// return total + item.quantity;\n\t\t// }, 0);\n\n\t\t// setTotalItemCount(totalItemCount);\n\t// };\n\n\t const clearAll =(itemList) => {\n\t\t document.getElementById(\"itemList\").innerHTML = \"\" ;\n\t\t window.location.reload(false);\n\n\t\t \n\t }\n\n\treturn (\n\t\t<div className='app-background'>\n\t\t\t<div className='main-container'>\n\t\t\t<h1>Grocery List</h1>\n\t\t\t\t<span><div className='add-item-box'>\n\t\t\t\t\t<input value={inputValue} onChange={(event) => setInputValue(event.target.value)} className='add-item-input' placeholder='Add an item...' />\n\t\t\t\t\t<span><button className=\"add\" onClick={() => handleAddButtonClick()}> Add</button></span>\n\t\t\t\t\t <div><input type=\"button\" value=\"Clear\" onClick={clearAll} /></div> \n\t\t\t\t\t</div></span>\n\t\t\t\t\t\n\n\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t<div id='itemList'>\n\t\t\t\t\t{items.map((item, index) => (\n\t\t\t\t\t\t<div className='item-container'>\n\t\t\t\t\t\t\t<div className='item-name' onClick={() => toggleComplete(index)}>\n\t\t\t\t\t\t\t\t{item.isSelected ? (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<span className='completed'>{item.itemName}</span>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<span>{item.itemName}</span>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='quantity'>\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<button onClick={() => handleQuantityDecrease(index)}>-</button>\n\t\t\t\t\t\t\t\t<span> {item.quantity} </span>\n\t\t\t\t\t\t\t\t<button onClick={() => handleQuantityIncrease(index)}> + </button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}