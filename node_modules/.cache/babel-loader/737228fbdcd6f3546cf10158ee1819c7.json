{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avadhut.sutar\\\\Grocery\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './index.css';\n\nconst App = () => {\n  _s();\n\n  const [items, setItems] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n\n  function checkInputValue() {\n    return alert(\"Input cannot be blank\");\n  }\n\n  const handleAddButtonClick = () => {\n    const checkIndex = items.findIndex(items => inputValue === items.itemName);\n\n    if (inputValue === \"\") {\n      checkInputValue();\n    } else if (checkIndex !== -1) {\n      items[checkIndex].quantity++;\n      setInputValue('');\n      alert(\"item already present in the cart & quantity is increased\");\n    } else {\n      const newItem = {\n        itemName: inputValue,\n        quantity: 1,\n        isSelected: false\n      };\n      const newItems = [...items, newItem];\n      setItems(newItems);\n      setInputValue(''); // calculateTotal();\n    }\n  };\n\n  const handleQuantityIncrease = index => {\n    const newItems = [...items];\n    newItems[index].quantity++;\n    setItems(newItems); // calculateTotal();\n  };\n\n  const handleQuantityDecrease = index => {\n    const newItems = [...items];\n    newItems[index].quantity--;\n    setItems(newItems); // calculateTotal();\n  };\n\n  const toggleComplete = index => {\n    const newItems = [...items];\n    newItems[index].isSelected = !newItems[index].isSelected;\n    setItems(newItems);\n  }; // const calculateTotal = () => {\n  // const totalItemCount = items.reduce((total, item) => {\n  // return total + item.quantity;\n  // }, 0);\n  // setTotalItemCount(totalItemCount);\n  // };\n\n\n  const clearAll = itemList => {\n    document.getElementById(\"itemList\").innerHTML = \"\";\n    window.location.reload(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }\n  }, \"Grocery List\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-item-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: inputValue,\n    onChange: event => setInputValue(event.target.value),\n    className: \"add-item-input\",\n    placeholder: \"Add an item...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"add\",\n    onClick: () => handleAddButtonClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 12\n    }\n  }, \" Add\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    value: \"Clear\",\n    onClick: clearAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 12\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"itemList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, items.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item-name\",\n    onClick: () => toggleComplete(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 8\n    }\n  }, item.isSelected ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"completed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, item.itemName)) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, item.itemName))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quantity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleQuantityDecrease(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, \"-\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, \" \", item.quantity, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleQuantityIncrease(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, \" + \")))))));\n};\n\n_s(App, \"dLPUah1aqPhTEjz1t77n022eOEc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/avadhut.sutar/Grocery/src/App.js"],"names":["React","useState","App","items","setItems","inputValue","setInputValue","checkInputValue","alert","handleAddButtonClick","checkIndex","findIndex","itemName","quantity","newItem","isSelected","newItems","handleQuantityIncrease","index","handleQuantityDecrease","toggleComplete","clearAll","itemList","document","getElementById","innerHTML","window","location","reload","event","target","value","map","item"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './index.css';\n\nconst App = () => {\n\t\n\tconst [items, setItems] = useState([]);\n    const [inputValue, setInputValue] = useState('');\n\n\tfunction checkInputValue(){\n\t\n\t\t\treturn (\n\t\t\t\talert (\"Input cannot be blank\")\n\t\t\t);\n\t\t}\n\t\t\n\n\tconst handleAddButtonClick = () => {\n    const checkIndex = items.findIndex(items => inputValue === items.itemName );\n\t\tif (inputValue === \"\"){\n\t\t\tcheckInputValue();\n\t\t} else if (checkIndex !== -1){\n\t\t\titems[checkIndex].quantity++;\n\t\t\tsetInputValue('');\n\t\t\talert (\"item already present in the cart & quantity is increased\")\n\t\t\t\n\t\t}else {\n\t\tconst newItem = {\n\t\t\titemName: inputValue,\n\t\t\tquantity: 1,\n\t\t\tisSelected: false,\n\t\t};\n\n\t\tconst newItems = [...items, newItem];\n\n\t\tsetItems(newItems);\n\t\tsetInputValue('');\n\t\t// calculateTotal();\n\t}\n\t\t\n\t};\n\n\tconst handleQuantityIncrease = (index) => {\n\t\tconst newItems = [...items];\n\n\t\tnewItems[index].quantity++;\n\n\t\tsetItems(newItems);\n\t\t// calculateTotal();\n\t};\n\n\tconst handleQuantityDecrease = (index) => {\n\t\tconst newItems = [...items];\n\n\t\tnewItems[index].quantity--;\n\n\t\tsetItems(newItems);\n\t\t// calculateTotal();\n\t};\n\n\tconst toggleComplete = (index) => {\n\t\tconst newItems = [...items];\n\n\t\tnewItems[index].isSelected = !newItems[index].isSelected;\n\n\t\tsetItems(newItems);\n\t};\n\n\t// const calculateTotal = () => {\n\t\t// const totalItemCount = items.reduce((total, item) => {\n\t\t\t// return total + item.quantity;\n\t\t// }, 0);\n\n\t\t// setTotalItemCount(totalItemCount);\n\t// };\n\n\t const clearAll =(itemList) => {\n\t\t document.getElementById(\"itemList\").innerHTML = \"\" ;\n\t\t window.location.reload(false);\n\n\t\t \n\t }\n\n\treturn (\n\t\t<div className='app-background'>\n\t\t\t<div className='main-container'>\n\t\t\t<h1>Grocery List</h1>\n\t\t\t\t<span><div className='add-item-box'>\n\t\t\t\t\t<input value={inputValue} onChange={(event) => setInputValue(event.target.value)} className='add-item-input' placeholder='Add an item...' />\n\t\t\t\t\t<span><button className=\"add\" onClick={() => handleAddButtonClick()}> Add</button></span>\n\t\t\t\t\t <div><input type=\"button\" value=\"Clear\" onClick={clearAll} /></div> \n\t\t\t\t\t</div></span>\n\t\t\t\t\t\n\n\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t<div id='itemList'>\n\t\t\t\t\t{items.map((item, index) => (\n\t\t\t\t\t\t<div className='item-container'>\n\t\t\t\t\t\t\t<div className='item-name' onClick={() => toggleComplete(index)}>\n\t\t\t\t\t\t\t\t{item.isSelected ? (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<span className='completed'>{item.itemName}</span>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<span>{item.itemName}</span>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='quantity'>\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<button onClick={() => handleQuantityDecrease(index)}>-</button>\n\t\t\t\t\t\t\t\t<span> {item.quantity} </span>\n\t\t\t\t\t\t\t\t<button onClick={() => handleQuantityIncrease(index)}> + </button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}